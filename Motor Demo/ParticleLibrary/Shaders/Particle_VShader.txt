#version 330 core
layout (location = 0) in vec3 aPos; 
layout (location = 1) in vec2 aCoords; 


out vec2 texCoords;
out vec4 particleColor;

uniform mat4 model[160];
uniform mat4 view;
uniform mat4 projection;

//Animated Particle
uniform vec4 modidiedCoords[160]; // .xy (min coordinate position) .z (Column normalized) .w (Row normalized)
uniform int isAnimated;

uniform vec4 color[160];

void main()
{
    particleColor = color[gl_InstanceID];

	if(isAnimated == 0)
		texCoords = aCoords;
	else
	{
		texCoords = modidiedCoords[gl_InstanceID].xy;
		if(aCoords.x == 1)
			texCoords.x += modidiedCoords[gl_InstanceID].z;
		if(aCoords.y == 1)
			texCoords.y += modidiedCoords[gl_InstanceID].w;
	}

	vec3 pos = vec3(model[gl_InstanceID] * vec4(aPos, 1.0));
    gl_Position = projection * view * vec4(pos, 1.0);
}